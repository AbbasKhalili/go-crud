basePath: /
definitions:
  Dtos.ErrorResponseDto:
    properties:
      error:
        type: string
    type: object
  Dtos.GenericResponseDto:
    properties:
      data: {}
      message:
        type: string
    type: object
  models.Product:
    properties:
      categoryId:
        type: integer
      id:
        type: integer
      ingredient:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for managing products
  title: Product API
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: add by json product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: Get all product
      tags:
      - products
    post:
      consumes:
      - application/json
      description: add by json product
      parameters:
      - description: Add product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Create a product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: add by json product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Dtos.GenericResponseDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Dtos.ErrorResponseDto'
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: add by json product
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Get a product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: add by json product
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Update a product
      tags:
      - products
swagger: "2.0"
